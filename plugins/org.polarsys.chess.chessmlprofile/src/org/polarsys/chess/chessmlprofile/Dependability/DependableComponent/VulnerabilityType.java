/**
 */
package org.polarsys.chess.chessmlprofile.Dependability.DependableComponent;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Vulnerability Type</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see org.polarsys.chess.chessmlprofile.Dependability.DependableComponent.DependableComponentPackage#getVulnerabilityType()
 * @model
 * @generated
 */
public enum VulnerabilityType implements Enumerator {
	/**
	 * The '<em><b>Missing Data Integrity Schemes</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #MISSING_DATA_INTEGRITY_SCHEMES_VALUE
	 * @generated
	 * @ordered
	 */
	MISSING_DATA_INTEGRITY_SCHEMES(0, "missingDataIntegritySchemes", "missingDataIntegritySchemes"),

	/**
	 * The '<em><b>Inadequate Encryption Strength</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #INADEQUATE_ENCRYPTION_STRENGTH_VALUE
	 * @generated
	 * @ordered
	 */
	INADEQUATE_ENCRYPTION_STRENGTH(1, "inadequateEncryptionStrength", "inadequateEncryptionStrength"),

	/**
	 * The '<em><b>Resource Allocation Without Limits</b></em>' literal object.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #RESOURCE_ALLOCATION_WITHOUT_LIMITS_VALUE
	 * @generated
	 * @ordered
	 */
	RESOURCE_ALLOCATION_WITHOUT_LIMITS(2, "resourceAllocationWithoutLimits", "resourceAllocationWithoutLimits");

	/**
	 * The '<em><b>Missing Data Integrity Schemes</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Missing Data Integrity Schemes</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #MISSING_DATA_INTEGRITY_SCHEMES
	 * @model name="missingDataIntegritySchemes"
	 * @generated
	 * @ordered
	 */
	public static final int MISSING_DATA_INTEGRITY_SCHEMES_VALUE = 0;

	/**
	 * The '<em><b>Inadequate Encryption Strength</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Inadequate Encryption Strength</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #INADEQUATE_ENCRYPTION_STRENGTH
	 * @model name="inadequateEncryptionStrength"
	 * @generated
	 * @ordered
	 */
	public static final int INADEQUATE_ENCRYPTION_STRENGTH_VALUE = 1;

	/**
	 * The '<em><b>Resource Allocation Without Limits</b></em>' literal value.
	 * <!-- begin-user-doc -->
	 * <p>
	 * If the meaning of '<em><b>Resource Allocation Without Limits</b></em>' literal object isn't clear,
	 * there really should be more of a description here...
	 * </p>
	 * <!-- end-user-doc -->
	 * @see #RESOURCE_ALLOCATION_WITHOUT_LIMITS
	 * @model name="resourceAllocationWithoutLimits"
	 * @generated
	 * @ordered
	 */
	public static final int RESOURCE_ALLOCATION_WITHOUT_LIMITS_VALUE = 2;

	/**
	 * An array of all the '<em><b>Vulnerability Type</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final VulnerabilityType[] VALUES_ARRAY =
		new VulnerabilityType[] {
			MISSING_DATA_INTEGRITY_SCHEMES,
			INADEQUATE_ENCRYPTION_STRENGTH,
			RESOURCE_ALLOCATION_WITHOUT_LIMITS,
		};

	/**
	 * A public read-only list of all the '<em><b>Vulnerability Type</b></em>' enumerators.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final List<VulnerabilityType> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

	/**
	 * Returns the '<em><b>Vulnerability Type</b></em>' literal with the specified literal value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param literal the literal.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static VulnerabilityType get(String literal) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			VulnerabilityType result = VALUES_ARRAY[i];
			if (result.toString().equals(literal)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Vulnerability Type</b></em>' literal with the specified name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param name the name.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static VulnerabilityType getByName(String name) {
		for (int i = 0; i < VALUES_ARRAY.length; ++i) {
			VulnerabilityType result = VALUES_ARRAY[i];
			if (result.getName().equals(name)) {
				return result;
			}
		}
		return null;
	}

	/**
	 * Returns the '<em><b>Vulnerability Type</b></em>' literal with the specified integer value.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the integer value.
	 * @return the matching enumerator or <code>null</code>.
	 * @generated
	 */
	public static VulnerabilityType get(int value) {
		switch (value) {
			case MISSING_DATA_INTEGRITY_SCHEMES_VALUE: return MISSING_DATA_INTEGRITY_SCHEMES;
			case INADEQUATE_ENCRYPTION_STRENGTH_VALUE: return INADEQUATE_ENCRYPTION_STRENGTH;
			case RESOURCE_ALLOCATION_WITHOUT_LIMITS_VALUE: return RESOURCE_ALLOCATION_WITHOUT_LIMITS;
		}
		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final int value;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String name;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private final String literal;

	/**
	 * Only this class can construct instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private VulnerabilityType(int value, String name, String literal) {
		this.value = value;
		this.name = name;
		this.literal = literal;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public int getValue() {
	  return value;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getName() {
	  return name;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getLiteral() {
	  return literal;
	}

	/**
	 * Returns the literal value of the enumerator, which is its string representation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		return literal;
	}
	
} //VulnerabilityType
