-- @path DEEM=CHESSReviewDemo/metamodels/deem.ecore
-- @path MOI=CHESSReviewDemo/metamodels/measures.ecore

library DEEM2String;

helper context DEEM!Net def: toString():String = 
	'<NDFile-\'1.2\'>\n\n'+
	'NET:"'+self.Name+'",2000,2000;\n'+
	'COLORS:White,Black,Black,Black,Black,Black;\n'
	+'\n'+
	MOI!Variable.allInstances()->iterate(i; acc:String=''| acc + i.toString())
	+'\n'+
	MOI!Study.allInstances()->iterate(i; acc:String=''| acc + i.toString())
	+'\n'+
	self.places->iterate(i; acc:String=''| acc + i.toString())+
	'\n'+
	self.transitions->iterate(i; acc:String=''| acc + i.toString())+
	'\n'+
	self.inputArcs->iterate(i; acc:String=''| acc + i.toString())+
	'\n'+
	self.outputArcs->iterate(i; acc:String=''| acc + i.toString())
	+'\n'+
	MOI!Measure.allInstances()->iterate(i; acc:String=''| acc + i.toString() + '\n')
	+'\n';
	
helper context DEEM!Place def: toString(): String =
	if self.displayInfo.oclIsUndefined() then
		'PLACE:"'+self.Name+'",1500,1500,'+self.marking+',0;\n'
	else
		'PLACE:"'+self.Name+'",'+ self.displayInfo.x.longValue()+','+self.displayInfo.y.longValue()+','+self.marking+',0;\n'
	endif;
	
helper context DEEM!ImmediateTransition def: toString(): String = 
--	'TRANS:"'+self.Name+'",1500,1500,V,Immediate,'+self.Priority+',0,\'\', \'\',\n'+
	if(self.displayInfo.oclIsUndefined()) then
    	'TRANS:"'+self.Name+'",1500,1500,V,Immediate,1,1,\'\', \''+self.params->first()+'\',\n'
	else
		'TRANS:"'+self.Name+'",'+self.displayInfo.x.longValue()+','+self.displayInfo.y.longValue()+',V,Immediate,1,1,\'\', \''+self.params->first()+'\',\n'
	endif+
    ' (\n'+
    '1.000000e+00\n' +
    '  '+self.params->subSequence(2, self.params->size())->iterate(i; acc : String = '' |
			acc +
			if acc = '' then
				''
			else
				',\n'
			endif +
			'\''+i.toString()+'\''
		)+
	'\n'+
    '  );\n';
    
helper context DEEM!TimedTransition def: toString(): String =
	if(self.displayInfo.oclIsUndefined()) then
		'TRANS:"'+self.Name+'",1500,1500,V,Timed,1,'
	else
		'TRANS:"'+self.Name+'",'+self.displayInfo.x.longValue()+','+self.displayInfo.y.longValue()+',V,Timed,1,'
	endif+
	if self.type = #Deterministic then
		'0'
	else if self.type=#Exponential then
		'1'
	else if self.type=#Normal then
		'11'
	else if self.type=#Uniform then
		'13'
	else if self.type=#Gamma then
		'3'
	else --if self=#Weibull then
		'14'
	endif endif endif endif endif
	+',\'\', \''+self.params->first()+'\',\n'+
    ' (\n'+
    '1.000000e+00\n' +
    '  '+self.params->subSequence(2, self.params->size())->iterate(i; acc : String = '' |
		acc +
		if acc = '' then
			''
		else
			',\n'
		endif +
	    '\''+i.toString()+'\''
	)+'\n'+
    '  );\n';

--helper context DEEM!ArcType def: toString(): String =
--	if self = #Normal then
--		'0'
--	else 
--		'2'
--	endif;

helper context DEEM!InputArc def: toString(): String =
	'IARC:"'+self.source.Name+'","'+self.target.Name+'",1,0,\'\',\n'+
    ' ('+
    if(self.source.displayInfo.oclIsUndefined()) then
	    '1500,1500'
	else
		self.source.displayInfo.x.longValue().toString()+','+self.source.displayInfo.y.longValue().toString()
	endif
	+','+
    if(self.target.displayInfo.oclIsUndefined()) then
	    '1500,1500'
	else
		self.target.displayInfo.x.longValue().toString() + ',' + self.target.displayInfo.y.longValue().toString()
	endif
	+'),1;\n';
    
helper context DEEM!OutputArc def: toString(): String =
	'OARC:"'+
    if self.oclIsTypeOf(DEEM!InhibitorArc) then
		self.source.Name+'","'+self.target.Name+'",1,2'
	else
		self.target.Name+'","'+self.source.Name+'",1,1'
	endif
	+',\'\',\n'+
    ' ('+
    if(self.source.displayInfo.oclIsUndefined()) then
	    '1500,1500'
	else
		self.source.displayInfo.x.longValue().toString()+','+self.source.displayInfo.y.longValue().toString()
	endif
	+','+
    if(self.target.displayInfo.oclIsUndefined()) then
	    '1500,1500'
	else
		self.target.displayInfo.x.longValue().toString() + ',' + self.target.displayInfo.y.longValue().toString()
	endif
	+'),1;\n';

helper context MOI!ValueExpression def: toString(): String = self.value.toString();

helper context MOI!OpSum def: toString(): String = self.expression1.toString() + '+' + self.expression2.toString();

helper context MOI!IfThenElse def: toString(): String =
	'IF('+self.condition.toString()+')THEN('+self.ifTrue.toString()+')ELSE('+self.ifFalse.toString()+')';

helper context MOI!MarkingExpression def: toString(): String = 'MARK('+self.placeID+')';

helper context MOI!Study def: toString(): String =
	'STUDY:"'+self.name+'",0,"not_def",10000;\n';
	
helper context MOI!Variable def: toString(): String = 
 	'VARIABLE:"'+self.name+'","Real";\n';
 	
helper context MOI!Measure def:toString(): String =
	'RES_FUNC:"'+self.name+'",\''+self.rewardFunction.toString()+'\',0;';
	
helper context MOI!OpEqual def: toString(): String = self.expression1.toString() + '=' + self.expression2.toString();